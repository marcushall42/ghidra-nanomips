define endian=$(ENDIAN);

define alignment=2;

define space ram        type=ram_space size=4 default;
define space register   type=register_space size=4;

define register offset=0 size=4 [
  zero at v0 v1 a0 a1 a2 a3
    t0 t1 t2 t3 t4 t5 t6 t7
    s0 s1 s2 s3 s4 s5 s6 s7
    t8 t9 k0 k1 gp sp s8 ra
    pc
];

# COP-0 control registers
define register offset=0x2000 size=4 [
    Status epc depc
];
# Regular 32-bit instruction
define token ins0(16)
    op          = (10,15)
    op1         = (5,9)
    rt          = (5,9)
    rs          = (0,4)
    c0s         = (0,4)
    rd1         = (8,8)
    rtz3        = (7,9)
    rt3         = (7,9)
    rs3         = (4,6)
    rd3         = (1,3)
    rtz4x       = (5,9)
    rt4x        = (5,9)
    rsz4x       = (0,4)
    rs4x        = (0,4)
    rd2x2       = (3,8)
    rd2x1       = (3,8)
    rt1         = (9,9)
    u0.10       = (10,10)
    u0.9        = (9,9)
    u0.8        = (8,8)
    u0.7_9      = (7,9)
    u0.6        = (6,6)
    u0.5_9      = (5,9)
    u0.4_7      = (4,7)
    u0.4_6      = (4,6)
    u0.4        = (4,4) signed
    s0.4        = (4,4) signed
    u0.3_9      = (3,9)
    u0.3_4      = (3,4)
    u0.3        = (3,3)
    u0.2_9      = (2,9)
    u0.2_4      = (2,4)
    u0.2_3      = (2,3)
    u0.1_9      = (1,9)
    u0.1_6      = (1,6)
    u0.1_2      = (1,2)
    u0.1        = (1,1)
    u0.0_9      = (0,9)
    u0.0_8      = (0,8)
    u0.0_6      = (0,6)
    u0.0_5      = (0,5)
    u0.0_4      = (0,4)
    u0.0_3      = (0,3)
    u0.0_2      = (0,2)
    u0.0_1      = (0,1)
    u0.0        = (0,0)
    s0.0        = (0,0) signed
;
define token ins1(16)
    rd          = (11,15)
    ru          = (3,7)
    u1.         = (0,15)
    s1.15       = (15,15) signed
    u1.14_15    = (14,15)
    u1.14       = (14,14)
    u1.13       = (13,13)
    u1.12_15    = (12,15)
    u1.12_14    = (12,14)
    u1.12       = (12,12)
    u1.11_15    = (11,15)
    u1.11       = (11,11)
    u1.10       = (10,10)
    u1.9_10     = (9,10)
    u1.8_14     = (8,14)
    u1.8_11     = (8,11)
    u1.7_10     = (7,10)
    u1.6_10     = (6,10)
    u1.6        = (6,6)
    u1.5_8      = (5,8)
    u1.5        = (5,5)
    u1.3_11     = (3,11)
    u1.3_9      = (3,9)
    u1.2_15     = (2,15)
    u1.2_11     = (2,11)
    u1.2_7      = (2,7)
    u1.2        = (2,2)
    u1.1_15     = (1,15)
    u1.1_13     = (1,13)
    u1.1_10     = (1,10)
    u1.1        = (1,1)
    u1.0_12     = (0,12)
    u1.0_11     = (0,11)
    u1.0_10     = (0,10)
    u1.0_9      = (0,9)
    u1.0_8      = (0,8)
    u1.0_7      = (0,7)
    u1.0_5      = (0,5)
    u1.0_4      = (0,4)
    u1.0_2      = (0,2)
    u1.0_1      = (0,1)
    u1.0        = (0,0)
    s1.0        = (0,0) signed
;
define token ins2(16)
    s2.         = (0,15) signed
;

#imm16: u1 is ; u1 { export u1; }

attach variables [ rs rt rd ru ] [
  zero at v0 v1 a0 a1 a2 a3
    t0 t1 t2 t3 t4 t5 t6 t7
    s0 s1 s2 s3 s4 s5 s6 s7
    t8 t9 k0 k1 gp sp s8 ra
];
attach variables [ rs3 rt3 ] [
    s0 s1 s2 s3 a0 a1 a2 a3
];
attach variables [ rtz3 ] [
    zero s1 s2 s3 a0 a1 a2 a3
];
attach variables [ rs4x rt4x ] [ # 4 bits with ignored bit inserted 3.210
    t0 t1 t2 t3 a0 a1 a2 a3 t0 t1 t2 t3 a0 a1 a2 a3
    s0 s1 s2 s3 s4 s5 s6 s7 s0 s1 s2 s3 s4 s5 s6 s7
];
attach variables [ rsz4x rtz4x ] [ # similar, but $3 == zero
    t0 t1 t2 zero a0 a1 a2 a3 t0 t1 t2 t3 a0 a1 a2 a3
    s0 s1 s2 s3 s4 s5 s6 s7 s0 s1 s2 s3 s4 s5 s6 s7
];
attach variables [ rd2x1 ] [ # a0, a1, a2, a3; but bits are b0 x x x x b1
 a0 a0 a0 a0 a0 a0 a0 a0 a0 a0 a0 a0 a0 a0 a0 a0 # b0=0 b1=0
 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 # b0=0 b1=1
 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 # b0=1 b1=0
 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 # b0=1 b1=1
];
attach variables [ rd2x2 ] [ # a1, a2, a3, t0; but bits are b0 x x x x b1
 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 a1 # b0=0 b1=0
 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 a3 # b0=0 b1=1
 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 a2 # b0=1 b1=0
 t0 t0 t0 t0 t0 t0 t0 t0 t0 t0 t0 t0 t0 t0 t0 t0 # b0=1 b1=1
];
attach variables [ rd1 ] [ a0 a1 ];
attach variables [ rt1 ] [ s8 ra ];

define pcodeop trap;
define pcodeop cacheOp;
#define pcodeop disableInterrupts;
#define pcodeop enableInterrupts;
define pcodeop disableProcessor;
define pcodeop enableProcessor;
define pcodeop crc32;
define pcodeop countLeadingOnes;
define pcodeop countLeadingZeros;
define pcodeop read_cp0_register;
define pcodeop write_cp0_register;
define pcodeop pause;
define pcodeop read_hw;
define pcodeop rotx;
